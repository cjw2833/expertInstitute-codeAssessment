{"ast":null,"code":"import { of } from 'rxjs';\nimport { routerPaths } from \"../constants/router-paths\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\n/**\r\n * Assets HTTP Service\r\n */\n\nexport let AssetsHttpService = /*#__PURE__*/(() => {\n  class AssetsHttpService {\n    constructor(router, // private logger: NGXLogger,\n    httpClient) {\n      this.router = router;\n      this.httpClient = httpClient;\n      this.baseCoinCapAssetsApiPath = 'https://api.coincap.io/v2/';\n    }\n\n    handleError(error) {\n      // this.logger.error(error);\n      this.router.navigate([routerPaths.pageUnavailable]);\n      return of(null);\n    }\n    /**\r\n     * GET Request to retrieve all assets\r\n     */\n\n\n    getAllAssets() {\n      return this.httpClient.get(this.baseCoinCapAssetsApiPath + 'assets');\n    }\n    /**\r\n      * GET Request to retrieve a specific asset by id and time interval(m1, m5, m15, m30, h1, h2, h6, h12, d1)\r\n      * TODO: Add time interval selection to chart\r\n      */\n\n\n    getAssetById(assetId, interval) {\n      return this.httpClient.get(this.baseCoinCapAssetsApiPath + `assets/${assetId}/history?interval=${interval}`);\n    }\n\n  }\n\n  AssetsHttpService.ɵfac = function AssetsHttpService_Factory(t) {\n    return new (t || AssetsHttpService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  AssetsHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssetsHttpService,\n    factory: AssetsHttpService.ɵfac\n  });\n  return AssetsHttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}